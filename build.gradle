plugins {
    id 'java'
    id 'war'
    id "io.freefair.lombok" version "8.4"
}

group = 'ru.clevertec'
version = '1.0-SNAPSHOT'

war {
    archiveFileName = 'clevertec.war'
}

repositories {
    mavenCentral()
}

ext {
    springVersion= '6.1.2'
    mapstructVersion = '1.5.5.Final'
    junitVersion = '5.9.2'
    assertJVersion = '3.24.2'
    mockitoVersion = '5.6.0'
    snakeYamlVersion = '2.1'
    postgresVersion = '42.6.0'
    hikariCPVersion = '5.1.0'
    aspectJVersion = '1.9.21'
    javaxValidationVersion = '2.0.1.Final'
    javaxVersion = '3.0.0'
    hibernateValidatorVersion = '6.2.5.Final'
    jacksonVersion = '2.16.0'
    itextpdfVersion = '8.0.2'
    javaxServletVersion = '4.0.1'
    slf4jVersion = '2.0.7'
}

dependencies {

    implementation "org.springframework:spring-core:${springVersion}"
    implementation "org.springframework:spring-beans:${springVersion}"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-aop:${springVersion}"
    implementation "org.springframework:spring-expression:${springVersion}"

    implementation "javax.annotation:javax.annotation-api:1.3.2"


    implementation "org.postgresql:postgresql:${postgresVersion}"

    implementation "com.zaxxer:HikariCP:${hikariCPVersion}"

    implementation "org.yaml:snakeyaml:${snakeYamlVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"


    implementation "javax.validation:validation-api:${javaxValidationVersion}"

    implementation "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"

    implementation "javax.el:javax.el-api:${javaxVersion}"
    implementation "org.glassfish:javax.el:${javaxVersion}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    implementation "com.itextpdf:itext-core:${itextpdfVersion}"

    implementation "javax.servlet:javax.servlet-api:${javaxServletVersion}"

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    runtimeOnly "org.aspectj:aspectjweaver:${aspectJVersion}"
    implementation "org.aspectj:aspectjrt:${aspectJVersion}"

    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"

    testImplementation "org.assertj:assertj-core:${assertJVersion}"

    testImplementation "org.springframework:spring-test:${springVersion}"

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.hibernate.validator:hibernate-validator-annotation-processor:${hibernateValidatorVersion}"
}

test {
    useJUnitPlatform()
}